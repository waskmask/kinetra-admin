@import "./fonts";
@import "./var";

body {
  background-color: $bg;
}
* {
  font-family: $font !important;
}
@import "./sidebar";

.dash-body {
  position: relative;
  display: flex;
  .main-sidebar {
    width: 280px;
    position: fixed;
    left: 0;
    top: 0;
    min-height: 100dvh;
  }
  main {
    width: calc(100% - 280px);
    margin-left: 280px;
    position: relative;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 .h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  color: $dark;
  font-weight: 600;
}
p,
.p {
  color: $body;
}

.fs-7 {
  font-size: 0.875rem;
}
.auth {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  padding: 30px 1rem;

  @include phone {
    min-height: 100dvh;
  }
  .logo-wrapper {
    width: 100%;
    max-width: 400px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    text-align: center;
  }

  .logo {
    max-height: 35px;
  }
  .wrapper {
    width: 100%;
    max-width: 400px;
    background-color: $white;
  }

  .hasPassword {
    position: relative;
    .showPass {
      position: absolute;
      right: 0;
      top: 30px;
      padding: 0.5rem 0.85rem 0.5rem 0.5rem;
      font-size: 1.2rem;
      color: $body;
      cursor: pointer;
    }
  }
}
.hasPassword {
  position: relative;
  .showPass {
    position: absolute;
    right: 0;
    top: 27px;
    padding: 0.5rem 0.85rem 0.5rem 0.5rem;
    font-size: 1.2rem;
    color: $body;
    cursor: pointer;
  }
}

.option {
  text-transform: capitalize !important;
}
.ss-content .ss-list .ss-option {
  display: block;
  padding: 0.65rem 1rem !important;
  white-space: normal;
  color: $dark !important;
  font-size: 0.875rem !important;
  cursor: pointer;
  user-select: none;
}
.ss-content .ss-list .ss-option:hover {
  color: $white !important;
  background-color: $primary !important;
}
.ss-content .ss-list .ss-option.ss-highlighted,
.ss-content .ss-list .ss-option:not(.ss-disabled).ss-selected {
  color: $dark !important;
  background-color: $bg !important;
}
.ss-value {
  background-color: $primary !important;
}
.ss-value-text {
  font-size: 0.8rem;
}
.ss-content .ss-search {
  color: $red;
  font-size: 0.8rem;
  text-transform: none !important;
}
.form-label {
  font-size: 0.8rem;
  color: $body;
  margin-bottom: 0.25rem;
}
.fieldset-label {
  font-size: 0.75rem;
}
.text-error {
  color: $red;
}
.form-control,
.form-select,
.ss-main {
  background-color: $bg !important;
  border: none;
  color: $dark;
  font-size: 0.875rem;
  padding: 0.65rem 0.85rem;

  &::placeholder {
    color: $pholder;
  }
}

.btn {
  height: 41.7px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 0.9rem;
  font-weight: 500;
}
.btn.btn-primary {
  background-color: $primary;
  border-color: $primary;
  color: $white;
  &:hover {
    background-color: lighten($primary, 5%);
    border-color: lighten($primary, 5%);
  }
}

.px-mp {
  padding-left: 1.5em;
  padding-right: 1.5em;
}
.px-25 {
  padding-left: 0.8rem;
  padding-right: 0.8rem;
}

.p-title {
  font-size: 1.2rem;
  font-weight: 600;
  color: $body;
  line-height: normal;
  margin-bottom: 1rem;
}
/* Customize the label (the check-container) */
.check-container {
  display: block;
  position: relative;
  padding-left: 30px;
  margin-bottom: 13px;
  cursor: pointer;
  font-size: 1rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: $dark;
  width: fit-content;
}
.check-container.light {
  color: $white;
}

/* Hide the browser's default checkbox */
.check-container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 2px;
  left: 0;
  height: 18px;
  width: 18px;
  background-color: transparent;
  border-radius: 0.25rem;
  border: solid $body 1px;
}

/* On mouse-over, add a grey background color */
.check-container:hover input ~ .checkmark {
  background-color: $bg;
}

/* When the checkbox is checked, add a blue background */
.check-container input:checked ~ .checkmark {
  transition: all 0.2s;
  background-color: $primary;
  border-color: $primary;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.check-container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.check-container .checkmark:after {
  left: 5.5px;
  top: 1.2px;
  width: 6px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}
.status-check.checkmark {
  top: 2px;
  background-color: transparent;
  border-radius: 0.25rem;
  border: solid #c82a3a 1px;
}
.check-container .status-check.checkmark:after {
  left: 5.5px;
  top: 1px;
  width: 6px;
  height: 10px;
}
.check-container input:checked ~ .status-check.checkmark {
  transition: all 0.2s;
  background-color: #18ca7a;
  border-color: #18ca7a;
}
